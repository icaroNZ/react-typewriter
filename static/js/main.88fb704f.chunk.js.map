{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["textArray","Error","typewriter","useRef","useState","typed","setTyped","showHighlight","setShowHighlight","textLineSize","newTyped","textLineIndex","startType","useCallback","index","pun","setTimeout","useEffect","ref","className","styles","App","ReactDOM","render","document","getElementById"],"mappings":"iSAGA,SAAoB,GAAe,IAAbA,EAAa,EAAbA,UACpB,GAAyB,qBAAdA,GAAX,IAAwCA,SACtC,MAAM,IAAIC,MAAV,mDAGF,IAAMC,EAAaC,mBALc,EAMPC,mBANO,IAM1BC,EAN0B,KAMnBC,EANmB,OAOSF,oBAPT,GAO1BG,EAP0B,KAOXC,EAPW,KAQ3BC,EAAeT,SAArB,EAEIU,EAAJ,GACIC,EAAJ,EAEMC,EAAYC,uBAAY,cACxBC,EAAQC,EAAZ,QACEL,GAAsBK,SAAtBL,GACAJ,KACAQ,IACAE,YAAW,WACTJ,EAAUG,EAAVH,KADFI,MAIAA,YAAW,WACTR,QADFQ,KAIAA,YAAW,WACTR,MAEAF,EADAI,QAEAC,EACA,IACEA,KAEFC,EAAUZ,EAAD,GAATY,KARFI,QAbJ,IA8BA,OAJAC,qBAAU,WACRL,EAAUZ,EAAD,GAATY,KACC,CAFHK,IAKE,0BACEC,IADF,EAEEC,UAAcC,EAAL,KACPb,EAAgBa,EADT,KAHb,I,MChCaC,MATH,IAMH,kBAAC,EAAD,CAAYrB,UALM,CACvB,QACA,6CACA,gFCHJsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.88fb704f.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport styles from './styles.module.scss'\n\nfunction Typewriter({ textArray }) {\n  if (typeof textArray === 'undefined' || textArray.length === 0) {\n    throw new Error('The prop textArray most have at least one value')\n  }\n\n  const typewriter = useRef()\n  const [typed, setTyped] = useState('')\n  const [showHighlight, setShowHighlight] = useState(false)\n  const textLineSize = textArray.length - 1\n\n  let newTyped = ''\n  let textLineIndex = 0\n\n  const startType = useCallback((pun, index) => {\n    if (index < pun.length) {\n      newTyped = newTyped + pun.charAt(index)\n      setTyped(newTyped)\n      index++\n      setTimeout(function () {\n        startType(pun, index)\n      }, 50)\n    } else {\n      setTimeout(function () {\n        setShowHighlight(true)\n      }, 4000)\n\n      setTimeout(function () {\n        setShowHighlight(false)\n        newTyped = ''\n        setTyped(newTyped)\n        textLineIndex++\n        if (textLineIndex > textLineSize) {\n          textLineIndex = 0\n        }\n        startType(textArray[textLineIndex], 0)\n      }, 5000)\n    }\n  }, [])\n\n  useEffect(() => {\n    startType(textArray[0], 0)\n  }, [startType])\n\n  return (\n    <span\n      ref={typewriter}\n      className={`${styles.typewriter} ${\n        showHighlight ? styles.highlight : ''\n      }`}\n    >\n      {typed}\n    </span>\n  )\n}\n\nexport default Typewriter\n","import React from 'react'\n\nimport Typewriter from 'react-typewriter'\nimport 'react-typewriter/dist/index.css'\n\nconst App = () => {\n  const textArrayExample = [\n    'small',\n    'medium, this is a medium size text example',\n    'long text, this is a long text to server as an example how long text work!'\n  ]\n  return <Typewriter textArray={textArrayExample} />\n}\n\nexport default App\n","import './index.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}